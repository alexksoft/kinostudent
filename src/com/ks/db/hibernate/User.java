package com.ks.db.hibernate;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;


/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user_app")
public class User implements java.io.Serializable {

	private Integer id;
	private String name;
	private String surname;
	private String login;
	private String password;
	private String sha2Password;
	private String phone;
	private String role;
	private String rememberMeToken;
	private String position;
	private boolean isDeleted;
	private boolean isAdministrator;

	public User() {
	}

	public User(String login, String sha2Password, boolean isDeleted) {
		this.login = login;
		this.sha2Password = sha2Password;
		this.isDeleted = isDeleted;
	}

	public User(String name, String login, String sha2Password, String phone,
			String role, String rememberMeToken, boolean isDeleted) {
		this.name = name;
		this.login = login;
		this.sha2Password = sha2Password;
		this.phone = phone;
		this.role = role;
		this.rememberMeToken = rememberMeToken;
		this.isDeleted = isDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "position", length = 100)
	public String getPosition() {
		return this.position;
	}

	public void setPosition(String position) {
		this.position = position;
	}
	
	@Column(name = "login", nullable = false, length = 100)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "sha2_Password", nullable = false, length = 100)
	public String getSha2Password() {
		return sha2Password;
	}

	public void setSha2Password(String sha2Password) {
		this.sha2Password = sha2Password;
	}

	@Column(name = "phone", length = 100)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "role", length = 20)
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@Column(name = "remember_me_token", length = 65535)
	public String getRememberMeToken() {
		return this.rememberMeToken;
	}

	public void setRememberMeToken(String rememberMeToken) {
		this.rememberMeToken = rememberMeToken;
	}
	@Column(name = "is_administrator", nullable = false)
	public boolean isIsAdministrator() {
		return this.isAdministrator;
	}

	public void setIsAdministrator(boolean isAdministrator) {
		this.isAdministrator = isAdministrator;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}



	@Override
	public boolean equals(Object o) {
		if (o == null) return false;
		if (o == this) return true;

		if (o instanceof User) {
			User that = (User) o;

			EqualsBuilder eb = new EqualsBuilder();
			eb.append(this.getId(), that.getId());
			eb.append(this.isIsDeleted(), that.isIsDeleted());
			eb.append(this.getLogin(), that.getLogin());
			eb.append(this.getPassword(), that.getPassword());
			eb.append(this.getPhone(), that.getPhone());
			eb.append(this.getName(), that.getName());
			eb.append(this.getSurname(), that.getSurname());
			eb.append(this.getRole(), that.getRole());
			return eb.isEquals();
		}
		return false;
	}

	@Override
	public int hashCode() {
		HashCodeBuilder hcb = new HashCodeBuilder();
		hcb.append(this.getId());
		hcb.append(this.isIsDeleted());
		hcb.append(this.getLogin());
		hcb.append(this.getPassword());
		hcb.append(this.getPhone());
		hcb.append(this.getName());
		hcb.append(this.getSurname());
		hcb.append(this.getRole());
		return hcb.hashCode();
	}

	public String gFullName(){
		String fullName = getName();
		if(fullName == null || fullName.length()==0){
			fullName = getSurname();
		}else{
			if(getSurname() != null && getSurname().length()>0){
				fullName = fullName + " " + getSurname();
			}
		}
		if(fullName == null){
			fullName = "";
		}
		return fullName;
	}
	
	public String gFullNameWithLogin(){
		if(gFullName().length() == 0){
			return getLogin();
		}else{
			return gFullName() +" (" + getLogin() + ")";
		}
	}
}
