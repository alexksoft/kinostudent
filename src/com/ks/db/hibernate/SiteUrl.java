package com.ks.db.hibernate;
// Generated 05-Oct-2017 17:05:02 by Hibernate Tools 5.2.5.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.ks.enums.CategoryType;
import com.ks.enums.SiteUrlTypeEnum;

/**
 * SiteUrl generated by hbm2java
 */
@Entity
@Table(name = "site_url", catalog = "pr")
public class SiteUrl implements java.io.Serializable {

	private Integer id;
	private String name;
	private String url;
	private String description;
	private Boolean isDeleted;
	private String dateFormat;
	private String language;
	private String paymentLevel;
	private SiteUrlTypeEnum urlType;
	private Set<Project> projects = new HashSet<Project>(0);
	private Set<Event> events = new HashSet<Event>(0);

	public SiteUrl() {
	}

	public SiteUrl(String url, String dateFormat, String language, String paymentLevel) {
		this.url = url;
		this.dateFormat = dateFormat;
		this.language = language;
		this.paymentLevel = paymentLevel;
	}

	public SiteUrl(String name, String url, String description, Boolean isDeleted, String dateFormat, String language,
			String paymentLevel, Set<Project> projects, Set<Event> events) {
		this.name = name;
		this.url = url;
		this.description = description;
		this.isDeleted = isDeleted;
		this.dateFormat = dateFormat;
		this.language = language;
		this.paymentLevel = paymentLevel;
		this.projects = projects;
		this.events = events;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 65535)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "url", nullable = false, length = 65535)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "date_format", nullable = false, length = 100)
	public String getDateFormat() {
		return this.dateFormat;
	}

	public void setDateFormat(String dateFormat) {
		this.dateFormat = dateFormat;
	}

	@Column(name = "language", nullable = false, length = 2)
	public String getLanguage() {
		return this.language;
	}

	public void setLanguage(String language) {
		this.language = language;
	}

	@Column(name = "payment_level", nullable = false, length = 20)
	public String getPaymentLevel() {
		return this.paymentLevel;
	}

	public void setPaymentLevel(String paymentLevel) {
		this.paymentLevel = paymentLevel;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "siteUrl")
	public Set<Project> getProjects() {
		return this.projects;
	}

	public void setProjects(Set<Project> projects) {
		this.projects = projects;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "siteUrl")
	public Set<Event> getEvents() {
		return this.events;
	}

	public void setEvents(Set<Event> events) {
		this.events = events;
	}
	
	@Column(name = "url_type", nullable = false, length = 50)
	@Enumerated(EnumType.STRING)
	public SiteUrlTypeEnum getUrlType() {
		return this.urlType;
	}

	public void setUrlType(SiteUrlTypeEnum urlType) {
		this.urlType = urlType;
	}

}
