package com.ks.db.hibernate;
// Generated 05-Oct-2017 17:05:02 by Hibernate Tools 5.2.5.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.ks.enums.EventStatus;

/**
 * Event generated by hbm2java
 */
@Entity
@Table(name = "event", catalog = "pr")
public class Event implements java.io.Serializable {

	private Integer id;
	private Category category;
	private SiteUrl siteUrl;
	private Date createdDate;
	private Date downloadDate;
	private String jobSite;
	private String jobSiteId;
	private String title;
	private String link;
	private String shortText;
	private String text;
	private String budget;
	private Boolean isExecutiveSelected;
	private Boolean isForProfessional;
	private Boolean isDeleted;
	private boolean sendByEmail;
	private Integer budgetFrom;
	private Integer budgetTo;
	private String budgetCurrency;
	private Boolean budgetIsPerHour;
	private Integer budgetFromUsd;
	private Integer budgetToUsd;
	private String notes;
	private EventStatus status;
	private int rank;
	private boolean checked;
	private String facebookPlaceId;
	private String facebookPlaceName;
	
	public Event() {
	}

	public Event(SiteUrl siteUrl, Date createdDate, Date downloadDate, String title, boolean sendByEmail, EventStatus status,
			int rank) {
		this.siteUrl = siteUrl;
		this.createdDate = createdDate;
		this.downloadDate = downloadDate;
		this.title = title;
		this.sendByEmail = sendByEmail;
		this.status = status;
		this.rank = rank;
	}

	public Event(Category category, SiteUrl siteUrl, Date createdDate, Date downloadDate, String jobSite,
			String jobSiteId, String title, String link, String shortText, String text, String budget,
			Boolean isExecutiveSelected, Boolean isForProfessional, Boolean isDeleted, boolean sendByEmail,
			Integer budgetFrom, Integer budgetTo, String budgetCurrency, Boolean budgetIsPerHour, Integer budgetFromUsd,
			Integer budgetToUsd, String notes, EventStatus status, int rank) {
		this.category = category;
		this.siteUrl = siteUrl;
		this.createdDate = createdDate;
		this.downloadDate = downloadDate;
		this.jobSite = jobSite;
		this.jobSiteId = jobSiteId;
		this.title = title;
		this.link = link;
		this.shortText = shortText;
		this.text = text;
		this.budget = budget;
		this.isExecutiveSelected = isExecutiveSelected;
		this.isForProfessional = isForProfessional;
		this.isDeleted = isDeleted;
		this.sendByEmail = sendByEmail;
		this.budgetFrom = budgetFrom;
		this.budgetTo = budgetTo;
		this.budgetCurrency = budgetCurrency;
		this.budgetIsPerHour = budgetIsPerHour;
		this.budgetFromUsd = budgetFromUsd;
		this.budgetToUsd = budgetToUsd;
		this.notes = notes;
		this.status = status;
		this.rank = rank;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category")
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "site_url_id", nullable = false)
	public SiteUrl getSiteUrl() {
		return this.siteUrl;
	}

	public void setSiteUrl(SiteUrl siteUrl) {
		this.siteUrl = siteUrl;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_date", nullable = false, length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "download_date", nullable = false, length = 19)
	public Date getDownloadDate() {
		return this.downloadDate;
	}

	public void setDownloadDate(Date downloadDate) {
		this.downloadDate = downloadDate;
	}

	@Column(name = "job_site", length = 100)
	public String getJobSite() {
		return this.jobSite;
	}

	public void setJobSite(String jobSite) {
		this.jobSite = jobSite;
	}

	@Column(name = "job_site_id", length = 100)
	public String getJobSiteId() {
		return this.jobSiteId;
	}

	public void setJobSiteId(String jobSiteId) {
		this.jobSiteId = jobSiteId;
	}

	@Column(name = "title", nullable = false, length = 65535)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "link", length = 65535)
	public String getLink() {
		return this.link;
	}

	public void setLink(String link) {
		this.link = link;
	}

	@Column(name = "short_text")
	public String getShortText() {
		return this.shortText;
	}

	public void setShortText(String shortText) {
		this.shortText = shortText;
	}

	@Column(name = "text")
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "budget", length = 65535)
	public String getBudget() {
		return this.budget;
	}

	public void setBudget(String budget) {
		this.budget = budget;
	}

	@Column(name = "is_executive_selected")
	public Boolean getIsExecutiveSelected() {
		return this.isExecutiveSelected;
	}

	public void setIsExecutiveSelected(Boolean isExecutiveSelected) {
		this.isExecutiveSelected = isExecutiveSelected;
	}

	@Column(name = "is_for_professional")
	public Boolean getIsForProfessional() {
		return this.isForProfessional;
	}

	public void setIsForProfessional(Boolean isForProfessional) {
		this.isForProfessional = isForProfessional;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

	@Column(name = "send_by_email", nullable = false)
	public boolean isSendByEmail() {
		return this.sendByEmail;
	}

	public void setSendByEmail(boolean sendByEmail) {
		this.sendByEmail = sendByEmail;
	}

	@Column(name = "budget_from")
	public Integer getBudgetFrom() {
		return this.budgetFrom;
	}

	public void setBudgetFrom(Integer budgetFrom) {
		this.budgetFrom = budgetFrom;
	}

	@Column(name = "budget_to")
	public Integer getBudgetTo() {
		return this.budgetTo;
	}

	public void setBudgetTo(Integer budgetTo) {
		this.budgetTo = budgetTo;
	}

	@Column(name = "budget_currency", length = 10)
	public String getBudgetCurrency() {
		return this.budgetCurrency;
	}

	public void setBudgetCurrency(String budgetCurrency) {
		this.budgetCurrency = budgetCurrency;
	}

	@Column(name = "budget_is_per_hour")
	public Boolean getBudgetIsPerHour() {
		return this.budgetIsPerHour;
	}

	public void setBudgetIsPerHour(Boolean budgetIsPerHour) {
		this.budgetIsPerHour = budgetIsPerHour;
	}

	@Column(name = "budget_from_USD")
	public Integer getBudgetFromUsd() {
		return this.budgetFromUsd;
	}

	public void setBudgetFromUsd(Integer budgetFromUsd) {
		this.budgetFromUsd = budgetFromUsd;
	}

	@Column(name = "budget_to_USD")
	public Integer getBudgetToUsd() {
		return this.budgetToUsd;
	}

	public void setBudgetToUsd(Integer budgetToUsd) {
		this.budgetToUsd = budgetToUsd;
	}

	@Column(name = "notes")
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "status", nullable = false, length = 20)
	@Enumerated(EnumType.STRING)
	public EventStatus getStatus() {
		return this.status;
	}

	public void setStatus(EventStatus status) {
		this.status = status;
	}

	@Column(name = "rank", nullable = false)
	public int getRank() {
		return this.rank;
	}

	public void setRank(int rank) {
		this.rank = rank;
	}

	@Transient
	public boolean isChecked() {
		return checked;
	}

	public void setChecked(boolean checked) {
		this.checked = checked;
	}

	@Column(name = "facebook_place_id", length = 500)
	public String getFacebookPlaceId() {
		return this.facebookPlaceId;
	}

	public void setFacebookPlaceId(String facebookPlaceId) {
		this.facebookPlaceId = facebookPlaceId;
	}

	@Column(name = "facebook_place_name", length = 500)
	public String getFacebookPlaceName() {
		return this.facebookPlaceName;
	}

	public void setFacebookPlaceName(String facebookPlaceName) {
		this.facebookPlaceName = facebookPlaceName;
	}
		
}
